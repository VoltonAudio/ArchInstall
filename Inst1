#! /bin/bash

set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

#verify EUFI mode
ls /sys/firmware/efi/efivars

#set keyboard layout
loadkeys uk

#test network
ip link
ping -c 2 archlinux.org

#update system clock
timedatectl set-ntp true

#ask user if checks completed
echo -n "Were Checks Completed: "
read randovar

#select hard disk
lsblk
echo -n "Enter Disk Name: /dev/"
read harddisk

#select a kernel
echo "linux
linux-lts
linux-hardened
linux-zen"
echo -n "Select A Kernel: "
read kernel
kernelheaders=$kernel"-headers"

#set hostname
echo -n "Hostname: "
read hostname

#enter username
echo -n "Enter Username: "
read username

#set password
rootpass1=1
rootpass2=2

while [ $rootpass1 != $rootpass2 ]
do
echo -n "Set Root Password: "
read -s rootpass1
echo \

echo -n "Confirm Password: "
read -s rootpass2
echo \

if [ "$rootpass1" == "$rootpass2" ]
then
    printf "Passwords Match"
    echo \

else
    printf "Passwords Don't Match"
    echo \

    printf "Please Try Again"
    echo \

fi
done

#wipe disk "$harddisk"
sgdisk --zap-all /dev/"$harddisk"

#partition boot, root and home
sgdisk -n 0:0:+1024MiB /dev/"$harddisk"
sgdisk -c 1:boot /dev/"$harddisk"
sgdisk -t 1:ef00 /dev/"$harddisk"

sgdisk -n 0:0:+35GiB /dev/"$harddisk"
sgdisk -c 2:root /dev/"$harddisk"
sgdisk -t 2:8300 /dev/"$harddisk"

sgdisk -n 0:0:0 /dev/"$harddisk"
sgdisk -c 3:home /dev/"$harddisk"
sgdisk -t 3:8300 /dev/"$harddisk"

#format partitions to correct file system
mkfs.fat -F32 /dev/"$harddisk"1
mkfs.ext4 -F /dev/"$harddisk"2
mkfs.ext4 -F /dev/"$harddisk"3

#mount partitions
mount /dev/"$harddisk"2 /mnt
mkdir /mnt/boot
mkdir /mnt/home
mount /dev/"$harddisk"1 /mnt/boot
mount /dev/"$harddisk"3 /mnt/home

#rank mirrorlist
cp /etc/pacman.d/mirrorlist  /etc/pacman.d/mirrorlist.backup
#pacman -Sy --noconfirm
#pacman -S --noconfirm pacman-contrib
#rankmirrors -n 10 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist
reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist

#install linux + packages to mount drive
pacstrap /mnt base base-devel $kernel $kernelheaders linux-firmware amd-ucode sudo nano

#generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

#create 2nd script to run in chroot
cat <<'EOF' > /mnt/root/part2.sh
#! /bin/bash
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

EOF

echo "kernel=$kernel
hostname=$hostname
rootpass=$rootpass1
harddisk=$harddisk
username=$username" >> /mnt/root/part2.sh

cat <<'EOF' >> /mnt/root/part2.sh

#set hostname
echo $hostname >> /etc/hostname

#set password
echo -en "$rootpass\n$rootpass" | passwd

#edit sudo
sed -i 's/# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/' /etc/sudoers
#sed -i '/%wheel ALL=(ALL) ALL/s/^#//' /etc/sudoers

#add account
useradd -m -g users -G wheel,storage -s /bin/bash $username
echo -en "$rootpass\n$rootpass" | passwd $username

#install bootloader
pacman -Syu --noconfirm
bootctl install

#edit loader.conf
echo "default $hostname
timeout 3
console-mode max
editor no" > /boot/loader/loader.conf

#edit arch.conf
echo "title $hostname
linux /vmlinuz-$kernel
initrd /amd-ucode.img
initrd /initramfs-$kernel.img" > /boot/loader/entries/"$hostname".conf

#add PARTUUID to arch.conf
echo -n "options root=PARTUUID=" >> /boot/loader/entries/"$hostname".conf
hddid=$(blkid -o value -s PARTUUID /dev/"$harddisk"2)
echo -n $hddid >> /boot/loader/entries/"$hostname".conf
echo " rw" >> /boot/loader/entries/"$hostname".conf

#setup dhcpcd + network manager
pacman -S --noconfirm dhcpcd networkmanager
systemctl enable dhcpcd@enp3s0.service
systemctl enable NetworkManager.service

#exit chroot
exit
EOF

arch-chroot /mnt bash /root/part2.sh

#sync all cache data to hdd
sync

#reboot system
reboot
